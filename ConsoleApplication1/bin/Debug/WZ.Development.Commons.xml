<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WZ.Development.Commons</name>
    </assembly>
    <members>
        <member name="M:WZ.Development.Commons.ConfigHelper.GetAppSettingsString(System.String)">
            <summary>
            获取配置文件属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            获取配置数据库连接
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:WZ.Development.Commons._3DESUtil">
            <summary>
            采用 3DES 加解密方式。
            </summary>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.EncryptString(System.String)">
            <summary>
            默认加密字符串。 
            </summary>
            <param name="ConnString"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.DecrypteString(System.String)">
            <summary>
            默认解密字符串   
            </summary>
            <param name="EncryptedConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.EncryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            使用指定的 Key 和 IV 加密 。 
            </summary>
            <param name="ToEncryptString"></param>
            <param name="byKey"></param>
            <param name="byIV"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.DecrypteString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            使用指定的 Key 和 IV 解密。 
            </summary>
            <param name="byIn"></param>
            <param name="byKey"></param>
            <param name="byIV"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.GetBytes(System.Int32)">
            <summary>
            获取随机（种子是 GUID 的 Byte 的和）长度的Byte数组.
            </summary>
            <param name="Len">要得到的数组的长度</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons._3DESUtil.TryGetKeyAndIV(System.Byte[]@,System.Byte[]@)">
            <summary>
            获取 Key 和 IV ， 如果失败，返回null。 
            </summary>
            <param name="Key"></param>
            <param name="IV"></param>
        </member>
        <member name="T:WZ.Development.Commons.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.isBaseNumber(System.Int32)">
            <summary>
            判断是否是  2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.StringToBytes(System.String)">
            <summary>
            将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.BytesToString(System.Byte[])">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToInt32``1(``0,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToBoolean``1(``0,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToBoolean(System.String,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToFloat``1(``0,System.Single)">
            <summary>
            将数据转换为单精度浮点型  转换失败 返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToFloat(System.String,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble``1(``0,System.Double)">
            <summary>
            将数据转换为双精度浮点型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble``1(``0,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble(System.String,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble(System.Object,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDouble(System.String,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            将数据转换为指定类型
            </summary>
            <param name="data">转换的数据</param>
            <param name="targetType">转换的目标类型</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ConvertTo``1(System.Object)">
            <summary>
            将数据转换为指定类型
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="data">转换的数据</param>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDecimal``1(``0,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDecimal(System.String,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDateTime``1(``0,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ToDateTime(System.String,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ConvertToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:WZ.Development.Commons.ConvertHelper.ConvertToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:WZ.Development.Commons.ICloneable`1">
            <summary>Defines a generalized clone method that a 
            value type or class implements to create a 
            type-specific clone method to supports cloning.</summary>
            <typeparam name="T">The type of object to clone.</typeparam>
        </member>
        <member name="M:WZ.Development.Commons.ICloneable`1.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance. </returns>
        </member>
        <member name="T:WZ.Development.Commons.List_Temp`1">
            <summary>
            Represents a strongly typed list of objects that 
            can be accessed by index. Provides methods to search, sort, 
            and manipulate lists. 
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1"></see> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1"></see> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1"></see> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity is less than 0. </exception>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.Synchronized``1(System.Collections.Generic.List{``0})">
            <summary>Returns an list wrapper that is synchronized (thread safe).</summary>
            <returns>An List wrapper that is synchronized (thread safe).</returns>
            <param name="list">The list to synchronize. </param>
            <exception cref="T:System.ArgumentNullException">list is null. </exception>
            <typeparam name="V">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.Repeat``1(``0,System.Int32)">
            <summary>Returns an <see cref="T:System.Collections.ArrayList"></see> whose elements are copies of the specified value.</summary>
            <returns>An <see cref="T:System.Collections.ArrayList"></see> with count number of elements, all of which are copies of value.</returns>
            <param name="count">The number of times value should be copied. </param>
            <param name="value">The <see cref="T:System.Object"></see> to copy multiple times in the new <see cref="T:System.Collections.ArrayList"></see>. The value can be null. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">count is less than zero. </exception>
            <typeparam name="V">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WZ.Development.Commons.List_Temp`1.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:WZ.Development.Commons.List_Temp`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="T:WZ.Development.Commons.JsonHelp">
            <summary>
            json 转化
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.JsonHelp.DeserializeList``1(System.String)">
            <summary>
            字符串json 转化list泛型
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="JsonStr">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.JsonHelp.Deserialize``1(System.String)">
            <summary>
            字符串json转化实体类
            </summary>
            <typeparam name="T"></typeparam>
            <param name="JsonStr"></param>
            <returns></returns>
        </member>
        <member name="T:WZ.Development.Commons.LogHelper">
            <summary>
            Log4Net日志记录辅助类
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.LogTextHelper">
            <summary>
            文本日志记录辅助类
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.MD5Util">
            <summary>
            MD5各种长度加密字符、验证MD5等操作辅助类
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.GetMD5_32(System.String)">
            <summary>
            获得32位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.GetMD5_16(System.String)">
            <summary>
            获得16位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.GetMD5_8(System.String)">
            <summary>
            获得8位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.GetMD5_4(System.String)">
            <summary>
            获得4位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.AddMD5Profix(System.String)">
            <summary>
            添加MD5的前缀，便于检查有无篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.RemoveMD5Profix(System.String)">
            <summary>
            移除MD5的前缀
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.ValidateValue(System.String)">
            <summary>
            验证MD5前缀处理的字符串有无被篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.AddMD5(System.String)">
            <summary>
            对给定文件路径的文件加上标签
            </summary>
            <param name="path">要加密的文件的路径</param>
            <returns>标签的值</returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.CheckMD5(System.String)">
            <summary>
            对给定路径的文件进行验证
            </summary>
            <param name="path"></param>
            <returns>是否加了标签或是否标签值与内容值一致</returns>
        </member>
        <member name="M:WZ.Development.Commons.MD5Util.MD5Buffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算文件的MD5值
            </summary>
            <param name="MD5File">MD5签名文件字符数组</param>
            <param name="index">计算起始位置</param>
            <param name="count">计算终止位置</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:WZ.Development.Commons.MP3Helper">
            <summary>
            MP3文件播放操作辅助类
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.NoMapAttribute">
            <summary>
            过滤列标示
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.IncrementAttribute">
            <summary>
            自增长列
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.primaryKeyAttribute">
            <summary>
            用来识别主键
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.ForeignKeyAttribute">
            <summary>
            实体特性
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.TableName">
            <summary>
             外键主表
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.PKey">
            <summary>
            主表关联属性名称
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.FKey">
            <summary>
            外键关联属性名称
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.Join">
            <summary>
            关联关系 inner join,Left Join, Right Join,Left Out Join,Right Out Join,Full Join
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.ColumnName">
            <summary>
            外键表列名
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ForeignKeyAttribute.WhereColumns">
            <summary>
            外键表条件列名  多个
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalIP">
            <summary>
            获取本地机器IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetValidIP(System.String)">
            <summary>
            检查设置的IP地址是否正确，并返回正确的IP地址,无效IP地址返回"-1"。
            </summary>
            <param name="ip">设置的IP地址</param>
            <returns>非法IP 则返回 -1 </returns>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:WZ.Development.Commons.NetworkUtil.IsConnectedInternet">
            <summary>
            检测本机是否联网
            </summary>
            <returns></returns>
        </member>
        <member name="P:WZ.Development.Commons.NetworkUtil.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.NetworkUtil.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:WZ.Development.Commons.NetworkUtil.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="T:WZ.Development.Commons.SyncList`1">
            <summary>
            Syncronized List
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SyncList"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Add(`0)">
            <summary>Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="item">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1"></see>. The collection itself cannot be null, but it can contain elements that are null, if type TKey is a reference type.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.AsReadOnly">
            <summary>
            Returns a read-only <see cref="T:System.Collections.Generic.IList`1"></see> wrapper for the current collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"></see> that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1"></see>.
            </returns>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Clear">
            <summary>Removes all elements from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Contains(`0)">
            <summary>Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>true if item is found in the <see cref="T:System.Collections.Generic.List`1"></see>; otherwise, false.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>Converts the elements in the current <see cref="T:System.Collections.Generic.List`1"></see> to another type, and returns a list containing the converted elements.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"></see> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="converter">A delegate that converts each element from one type to another type.</param>
            <exception cref="T:System.ArgumentNullException">converter is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.CopyTo(`0[])">
            <summary>Copies the entire <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the number of elements that the destination array can contain.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.CopyTo(`0[],System.Int32)">
            <summary>Copies the entire <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentException">arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the available space from arrayIndex to the end of the destination array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
            <summary>Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="count">The number of elements to copy.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <param name="index">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1"></see> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-arrayIndex is less than 0.-or-count is less than 0. </exception>
            <exception cref="T:System.ArgumentException">index is equal to or greater than the <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see> of the source <see cref="T:System.Collections.Generic.List`1"></see>.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements from index to the end of the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the available space from arrayIndex to the end of the destination array. </exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Exists(System.Predicate{`0})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.List`1"></see> contains elements that match the conditions defined by the specified predicate.</summary>
            <returns>true if the <see cref="T:System.Collections.Generic.List`1"></see> contains one or more elements that match the conditions defined by the specified predicate; otherwise, false.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Find(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type TKey.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindAll(System.Predicate{`0})">
            <summary>Retrieves the all the elements that match the conditions defined by the specified predicate.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindIndex(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the specified index to the last element.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at the specified index and contains the specified number of elements.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindLast(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type TKey.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindLastIndex(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindLastIndex(System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to the specified index.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains the specified number of elements and ends at the specified index.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.ForEach(System.Action{`0})">
            <summary>Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="action">The <see cref="T:System.Action`1"></see> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1"></see>.</param>
            <exception cref="T:System.ArgumentNullException">action is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1.Enumerator"></see> for the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.GetRange(System.Int32,System.Int32)">
            <summary>Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="count">The number of elements in the range.</param>
            <param name="index">The zero-based <see cref="T:System.Collections.Generic.List`1"></see> index at which the range starts.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.IndexOf(`0)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the first occurrence of item within the entire <see cref="T:System.Collections.Generic.List`1"></see>, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.IndexOf(`0,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the specified index to the last element.</summary>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from index to the last element, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at the specified index and contains the specified number of elements.</summary>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at index and contains count number of elements, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-index and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Insert(System.Int32,`0)">
            <summary>Inserts an element into the <see cref="T:System.Collections.Generic.List`1"></see> at the specified index.</summary>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1"></see> at the specified index.</summary>
            <param name="collection">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1"></see>. The collection itself cannot be null, but it can contain elements that are null, if type TKey is a reference type.</param>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.LastIndexOf(`0)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the last occurrence of item within the entire the <see cref="T:System.Collections.Generic.List`1"></see>, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.LastIndexOf(`0,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to the specified index.</summary>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to index, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains the specified number of elements and ends at the specified index.</summary>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains count number of elements and ends at index, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-index and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Remove(`0)">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>true if item is successfully removed; otherwise, false.  This method also returns false if item was not found in the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.RemoveAll(System.Predicate{`0})">
            <summary>Removes the all the elements that match the conditions defined by the specified predicate.</summary>
            <returns>The number of elements removed from the <see cref="T:System.Collections.Generic.List`1"></see> .</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to remove.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.RemoveAt(System.Int32)">
            <summary>Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.RemoveRange(System.Int32,System.Int32)">
            <summary>Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="count">The number of elements to remove.</param>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Reverse">
            <summary>Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Reverse(System.Int32,System.Int32)">
            <summary>Reverses the order of the elements in the specified range.</summary>
            <param name="count">The number of elements in the range to reverse.</param>
            <param name="index">The zero-based starting index of the range to reverse.</param>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0. </exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Sort">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the default comparer.</summary>
            <exception cref="T:System.InvalidOperationException">The default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find an implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the specified comparer.</summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"></see> implementation to use when comparing elements, or null to use the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see>.</param>
            <exception cref="T:System.ArgumentException">The implementation of comparer caused an error during the sort. For example, comparer might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.InvalidOperationException">comparer is null, and the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Sort(System.Comparison{`0})">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the specified <see cref="T:System.Comparison`1"></see>.</summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"></see> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentException">The implementation of comparison caused an error during the sort. For example, comparison might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.ArgumentNullException">comparison is null.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1"></see> using the specified comparer.</summary>
            <param name="count">The length of the range to sort.</param>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"></see> implementation to use when comparing elements, or null to use the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see>.</param>
            <exception cref="T:System.ArgumentException">index and count do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1"></see>.-or-The implementation of comparer caused an error during the sort. For example, comparer might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.InvalidOperationException">comparer is null, and the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.ToArray">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.List`1"></see> to a new array.</summary>
            <returns>An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.TrimExcess">
            <summary>Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1"></see>, if that number is less than a threshold value.</summary>
        </member>
        <member name="M:WZ.Development.Commons.SyncList`1.TrueForAll(System.Predicate{`0})">
            <summary>Determines whether every element in the <see cref="T:System.Collections.Generic.List`1"></see> matches the conditions defined by the specified predicate.</summary>
            <returns>true if every element in the <see cref="T:System.Collections.Generic.List`1"></see> matches the conditions defined by the specified predicate; otherwise, false. If the list has no elements, the return value is true.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions to check against the elements.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="P:WZ.Development.Commons.SyncList`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:WZ.Development.Commons.SyncList`1.Capacity">
            <summary>Gets or sets the total number of elements the internal data structure can hold without resizing.</summary>
            <returns>The number of elements that the <see cref="T:System.Collections.Generic.List`1"></see> can contain before resizing is required.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Collections.Generic.List&lt;T&gt;.Capacity"></see> is set to a value that is less than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>. </exception>
        </member>
        <member name="P:WZ.Development.Commons.SyncList`1.Count">
            <summary>Gets the number of elements actually contained in the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The number of elements actually contained in the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="P:WZ.Development.Commons.SyncList`1.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <returns>The element at the specified index.</returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>. </exception>
        </member>
        <member name="P:WZ.Development.Commons.PageInfo.PageSize">
            <summary>
            页面大小
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.PageInfo.RecordCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.QueryModel">
            <summary>
            查询条件model
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.QueryModel.WhereClause">
            <summary>
            查询条件（封装后的）
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.QueryModel.Columns">
            <summary>
            列名
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.QueryModel.Sort">
            <summary>
            排序列
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.QueryModel.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.QueryModel.CustomerSearch">
            <summary>
            自定义查询
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.ExecutionValidation">
            <summary>
            执行返回
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.Result">
            <summary>
            生成主键
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.Result.GetNewId">
            <summary>
            获取GUID
            </summary>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.Result.CreateNewId">
            <summary>
            创建不重复的Id
            </summary>
            <returns></returns>
        </member>
        <member name="P:WZ.Development.Commons.Result.NewTimeId">
            <summary>
            生成当前时间字符串
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.ThreadPoolHelper">
            <summary>
            线程池辅助操作类
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.ThreadPoolHelper.Callback(System.Object)">
            <summary>
            The WaitCallback delegate object in actual of our thread pool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:WZ.Development.Commons.ThreadPoolHelper.QueueUserWorkItem(WZ.Development.Commons.ThreadPoolHelper.WaitCallbackNew)">
            <summary>
            Queues a method for execution.
            The method executes when a thread pool thread becomes available.
            </summary>
            <param name="proc"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ThreadPoolHelper.QueueUserWorkItems(WZ.Development.Commons.ThreadPoolHelper.WaitCallbackNew[])">
            <summary>
            Queues a few method for execution.
            The method executes when a thread pool thread becomes available.
            </summary>
            <param name="proc"></param>
            <returns></returns>
        </member>
        <member name="F:WZ.Development.Commons.ThreadPoolHelper.AutoResetEvents">
            <summary>
            (Collection)Notifies a waiting thread that an event has occurred. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.ThreadPoolHelper.WaitAll">
            <summary>
            Waits for all the elements in the specified array to receive a signal.
            </summary>
            <returns>Waits for all the elements in the specified array to receive a signal.</returns>
        </member>
        <member name="M:WZ.Development.Commons.ThreadPoolHelper.WaitAny">
            <summary>
            Waits for any of the elements in the specified array to receive a signal.
            </summary>
            <returns>The array index of the object that satisfied the wait.</returns>
        </member>
        <member name="T:WZ.Development.Commons.ThreadPoolHelper.WaitCallbackNew">
            <summary>
            The delegate for explicit method.
            </summary>
        </member>
        <member name="T:WZ.Development.Commons.ThreadPoolHelper.WaitCallbackHelper">
            <summary>
            A callback container with a WaitHandle.
            </summary>
        </member>
        <member name="P:WZ.Development.Commons.ThreadPoolHelper.WaitCallbackHelper.Callback">
             <summary>
            
             </summary>
        </member>
        <member name="T:WZ.Development.Commons.ValidateUtil">
            <summary>
            各种输入格式验证辅助类
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidUserName(System.String)">
            <summary>
            检测用户名格式是否有效
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidPassword(System.String)">
            <summary>
            密码有效性
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidInt(System.String)">
            <summary>
            int有效性
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.GetCHZNLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度 
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsIdCard(System.String)">
            <summary>
            验证身份证是否合法  15 和  18位两种
            </summary>
            <param name="idCard">要验证的身份证</param>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsEmail(System.String)">
            <summary>
            是否是邮件地址
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidZip(System.String)">
            <summary>
            邮编有效性
            </summary>
            <param name="zip"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidPhone(System.String)">
            <summary>
            固定电话有效性
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidMobile(System.String)">
            <summary>
            手机有效性
            </summary>
            <param name="strMobile"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidPhoneAndMobile(System.String)">
            <summary>
            电话有效性（固话和手机 ）
            </summary>
            <param name="strVla"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidURL(System.String)">
            <summary>
            Url有效性
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidIP(System.String)">
            <summary>
            IP有效性
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsValidDomain(System.String)">
            <summary>
            domain 有效性
            </summary>
            <param name="host">域名</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsGuid(System.String)">
            <summary>
            验证字符串是否是GUID
            </summary>
            <param name="guid">字符串</param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsDate(System.String)">
            <summary>
            判断输入的字符是否为日期
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.IsDateHourMinute(System.String)">
            <summary>
            判断输入的字符是否为日期,如2004-07-12 14:25|||1900-01-01 00:00|||9999-12-31 23:59
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.CheckMathLength(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="sqlInput">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.Encode(System.String)">
            <summary>
            转换成 HTML code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:WZ.Development.Commons.ValidateUtil.Decode(System.String)">
             <summary>
            解析html成 普通文本
             </summary>
             <param name="str">string</param>
             <returns>string</returns>
        </member>
        <member name="T:WZ.Development.Commons.VerificationCodeHelper">
            <summary>
             验证码
            </summary>
        </member>
        <member name="M:WZ.Development.Commons.VerificationCodeHelper.CreateVerificationText(System.Int32)">
            <summary>
            创建验证码字符
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:WZ.Development.Commons.VerificationCodeHelper.CreateVerificationImage(System.String,System.Int32,System.Int32)">
            <summary>
            创建验证码图片
            </summary>
            <param name="verificationText">验证码字符串</param>
            <param name="width">图片宽度</param>
            <param name="height">图片长度</param>
            <returns>图片</returns>
        </member>
    </members>
</doc>
